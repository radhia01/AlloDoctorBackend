

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  firstName String 
  lastName String
  email String @unique 
  password String
  phone String
  description String?
  image String?
  role Role
  created_at DateTime @default(now())
  update_at  DateTime @updatedAt
  specialtyId Int?
  appointmentsAsDoctor Appointment[] @relation("DoctorAppointments")
  appointmentsAsPatient Appointment[] @relation("PatientAppointments")
  adress  Address?
  OffServices OffService[]
  holidays Holiday[]
  speciality Speciality? @relation(fields: [specialtyId],references: [id])
}

  model Speciality{
    id Int @id @default(autoincrement())
    name String
    Users User[]
   

  }

model Appointment {
  id Int @id @default(autoincrement())
  appointment_date DateTime 
  doctorId Int
  patientId Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  status Status @default(PENDING)
  doctor User @relation("DoctorAppointments",fields: [doctorId],references: [id])
  patient User @relation("PatientAppointments",fields: [patientId],references: [id])
}
  

  model Address{
    id Int @id @default(autoincrement())
    street String
    city String?
    governorate String
    userId Int @unique
    user User @relation(fields: [userId],references: [id])
  }
  model OffService {
    id Int @id @default(autoincrement())
    dayWeek DayOfWeek
    users User[]

  }
  model Holiday{
    id Int @id @default(autoincrement())
    start_day DateTime
    end_day DateTime
    doctorId Int
    doctor User @relation(fields: [doctorId],references: [id])

  }
enum Status {
  PENDING
  COMPLETED
  REJECTED
}


enum DayOfWeek {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}


enum Role {
DOCTOR
PATIENT
}